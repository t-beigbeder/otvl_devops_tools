---
# mockups/roles/k8s_client/tasks/main.yml

- name: Create k3s config bastion
  file:
    path: "{{ values.config_vars.devops_home }}/.k3s"
    state: directory
    mode: 0700
    owner: "{{ values.config_vars.devops_user }}"
    group: "{{ values.config_vars.devops_user }}"

- name: Create kube config bastion
  file:
    path: "{{ values.config_vars.devops_home }}/.kube"
    state: directory
    mode: 0700
    owner: "{{ values.config_vars.devops_user }}"
    group: "{{ values.config_vars.devops_user }}"

- name: Create helm local var files
  file:
    path: "{{ values.config_vars.devops_home }}/helm_values"
    state: directory
    mode: 0700
    owner: "{{ values.config_vars.devops_user }}"
    group: "{{ values.config_vars.devops_user }}"

- name: Install kubectl on the bastion host
  include_role:
    name: commons
    tasks_from: install_from_url
  vars:
    url: "{{ values.kubectl.url }}"
    dload_name: "kubectl.2"
    sha: "{{ values.kubectl.sha }}"
    binary_name: "kubectl"

- name: Install cmctl on the bastion host
  include_role:
    name: commons
    tasks_from: install_from_ghr
  vars:
    url: "{{ values.cmctl.release_url }}"
    tgz_name: "cmctl.1.tgz"
    sha: "{{ values.cmctl.sha }}"
    binary_name: "cmctl"
    binary_path: "."

- name: Install helm on the bastion host
  include_role:
    name: commons
    tasks_from: install_from_ghr
  vars:
    url: "{{ values.helm.release_url }}"
    tgz_name: "helm.1.tgz"
    sha: "{{ values.helm.sha }}"
    binary_name: "helm"
    binary_path: "linux-amd64"

- name: Install k9s on the bastion host
  include_role:
    name: commons
    tasks_from: install_from_ghr
  vars:
    url: "{{ values.k9s.release_url }}"
    tgz_name: "k9s.1.tgz"
    sha: "{{ values.k9s.sha }}"
    binary_name: "k9s"
    binary_path: "."

- name: Install opentofu on the bastion host
  include_role:
    name: commons
    tasks_from: install_from_ghr
  vars:
    url: "{{ values.opentofu.release_url }}"
    tgz_name: "opentofu.3.zip"
    sha: "{{ values.opentofu.sha }}"
    binary_name: "tofu"
    binary_path: "."

###