# mockups/roles/commons/tasks/install_from_ghr.yml
# install binary from github releases
# vars:
#   url: url
#   tgz_name: name of downloaded file
#   sha: sha256sum of the downloaded file
#   binary_name: extracted file name and/or archive extraction name
#   binary_path: path in the extracted archive
#   dir_content: extract binary_path content if var present and true

- name: set delivery directory for downloads
  block:
    - name: Does {{ values.config_paths.delivery }} exist
      stat:
        path: "{{ values.config_paths.delivery }}"
      register: ghr_dlv_stat
    - name: Set delivery to {{ values.config_paths.delivery }}
      set_fact:
        ghr_dlv: "{{ values.config_paths.delivery }}"
        ghr_extr: "{{ values.config_paths.delivery }}/{{ binary_name }}"
      when: ghr_dlv_stat.stat.exists
    - name: Set delivery to /tmp
      set_fact:
        ghr_dlv: "/tmp"
        ghr_extr: "/tmp/{{ binary_name }}"
      when: not ghr_dlv_stat.stat.exists
    - name: Set extracted file origin and target
      set_fact:
        ghr_extr_ori: "{{ ghr_extr }}/{{ binary_path }}/{{ binary_name }}"
      when: not (dir_content | default(false))
    - name: Set extracted dir origin and target
      set_fact:
        ghr_extr_ori: "{{ ghr_extr }}/{{ binary_path }}"
      when: dir_content | default(false)

- name: set included vars
  set_fact:
    ghr_get_msg: "Download release for {{ tgz_name }} in {{ ghr_dlv }} from {{ url }}"
    ghr_purge_msg: "Purge the {{ tgz_name }} extraction directory {{ ghr_extr }}"
    ghr_mkextr_msg: "Create the {{ tgz_name }} extraction directory {{ ghr_extr }}"
    ghr_extr_msg: "Extract {{ ghr_extr }} from {{ tgz_name }}"
    ghr_inst_msg: "Install {{ binary_name }} from {{ ghr_extr_ori }}"

- name: "{{ ghr_get_msg }}"
  ansible.builtin.get_url:
    url: "{{ url }}"
    dest: "{{ ghr_dlv }}/{{ tgz_name }}"
    checksum: "sha256:{{ sha }}"
  register: release_download

- name: "{{ ghr_purge_msg }}"
  file:
    dest: "{{ ghr_extr }}"
    state: absent
  when: release_download.changed

- name: "{{ ghr_mkextr_msg }}"
  file:
    dest: "{{ ghr_extr }}"
    state: directory
    mode: 0755
  register: release_mkextr

- name: "{{ ghr_extr_msg }}"
  ansible.builtin.unarchive:
    src: "{{ ghr_dlv }}/{{ tgz_name }}"
    remote_src: yes
    dest: "{{ ghr_extr }}"
  register: ghr_release_extract
  when: release_download.changed or release_mkextr.changed

- name: "{{ ghr_inst_msg }}"
  ansible.builtin.copy:
    src: "{{ ghr_extr }}/{{ binary_path }}/{{ binary_name }}"
    remote_src: true
    dest: "/usr/local/bin/{{ binary_name }}"
    mode: "0755"
  when: ghr_release_extract.changed and not dir_content | default(false)
